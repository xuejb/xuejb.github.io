<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>手可摘星尘</title>
  
  <subtitle>手可摘星尘</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-11T01:26:54.948Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>xuexi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于stm32的宿舍门禁系统</title>
    <link href="http://example.com/2021/08/10/%E5%9F%BA%E4%BA%8Estm32%E7%9A%84%E5%AE%BF%E8%88%8D%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2021/08/10/%E5%9F%BA%E4%BA%8Estm32%E7%9A%84%E5%AE%BF%E8%88%8D%E9%97%A8%E7%A6%81%E7%B3%BB%E7%BB%9F/</id>
    <published>2021-08-10T12:22:00.000Z</published>
    <updated>2021-08-11T01:26:54.948Z</updated>
    
    <content type="html"><![CDATA[<h4 id="原件：stm32f103c8t6，RC522，MG90S舵机"><a href="#原件：stm32f103c8t6，RC522，MG90S舵机" class="headerlink" title="原件：stm32f103c8t6，RC522，MG90S舵机"></a>原件：stm32f103c8t6，RC522，MG90S舵机</h4><h4 id="首先，配置LED以及MG90S初始化"><a href="#首先，配置LED以及MG90S初始化" class="headerlink" title="首先，配置LED以及MG90S初始化"></a>首先，配置LED以及MG90S初始化</h4><h4 id="所有的代码放在这里了："><a href="#所有的代码放在这里了：" class="headerlink" title="所有的代码放在这里了："></a>所有的代码放在这里了：</h4><p><a href="https://gitee.com/armgpio/access-control-system">https://gitee.com/armgpio/access-control-system</a></p><p>​        MG90S的OUT口接的是PB6，也就是stm32f103c8t6定时器TIM4的通道1。通过TIM4产生周期为20ms的PWM波，当高电平所占时间为1ms时，舵机转到中点位置。</p><h6 id="mg90s-c"><a href="#mg90s-c" class="headerlink" title="mg90s.c"></a>mg90s.c</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TIM4_PWM_Init</span><span class="params">(u16 arr,u16 psc)</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="comment">//**结构体声明**//</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;            <span class="comment">//声明GPIO</span></span><br><span class="line">TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure; <span class="comment">//声明定时器</span></span><br><span class="line">TIM_OCInitTypeDef  TIM_OCInitStructure;         <span class="comment">//声明PWM通道</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//**时钟使能**//</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);<span class="comment">//使能定时器TIM4时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); <span class="comment">//使能PB端口时钟</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO//</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = PWM_GPIO_PIN;<span class="comment">//PWM 端口配置</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; <span class="comment">//IO口速度为50MHz</span></span><br><span class="line">GPIO_Init(MOTO_GPIO_PORT, &amp;GPIO_InitStructure);<span class="comment">//根据设定参数初始化GPIOB6</span></span><br><span class="line">GPIO_SetBits(MOTO_GPIO_PORT,PWM_GPIO_PIN);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化TIM4</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//设置用来作为TIMx时钟频率除数的预分频值 </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM4, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化TIM4 Channel1 PWM模式 </span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; <span class="comment">//选择定时器模式:TIM脉冲宽度调制模式2</span></span><br><span class="line"> TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; <span class="comment">//比较输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">//输出极性:TIM输出比较极性高</span></span><br><span class="line">TIM_OC1Init(TIM4, &amp;TIM_OCInitStructure);  <span class="comment">//根据T指定的参数初始化外设TIM4 OC1</span></span><br><span class="line"></span><br><span class="line">TIM_OC1PreloadConfig(TIM4, TIM_OCPreload_Enable);  <span class="comment">//让oc1能重装载</span></span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM4, ENABLE);  <span class="comment">//使能TIM4</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RC522"><a href="#RC522" class="headerlink" title="RC522"></a>RC522</h4><p>​        对于RC522来说，使用的是单片机的硬件SPI。在SPI通信中，需要用到微秒的延时，所以这里还要用到嘀嗒定时器。配置好嘀嗒定时器后，就是RC522的初始化。</p><h6 id="RC522的初始化"><a href="#RC522的初始化" class="headerlink" title="RC522的初始化"></a>RC522的初始化</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">void RC522_Init ( void )</span><br><span class="line">&#123;</span><br><span class="line">RC522_SPI_Config ();</span><br><span class="line">RC522_Reset_Disable();</span><br><span class="line">RC522_CS_Disable();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line">  * @brief  R522 SPI配置</span><br><span class="line">  * @param  无</span><br><span class="line">  * @retval 无</span><br><span class="line">  *&#x2F;</span><br><span class="line">static void RC522_SPI_Config ( void )</span><br><span class="line">&#123;</span><br><span class="line">  &#x2F;* SPI_InitTypeDef  SPI_InitStructure *&#x2F;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">  </span><br><span class="line">&#x2F;*!&lt; Configure SPI_RC522_SPI pins: CS *&#x2F;</span><br><span class="line">RC522_GPIO_CS_CLK_FUN ( RC522_GPIO_CS_CLK, ENABLE );</span><br><span class="line">GPIO_InitStructure.GPIO_Pin &#x3D; RC522_GPIO_CS_PIN;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed &#x3D; GPIO_Speed_50MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode &#x3D; RC522_GPIO_CS_Mode;</span><br><span class="line">GPIO_Init(RC522_GPIO_CS_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">  &#x2F;*!&lt; Configure SPI_RC522_SPI pins: SCK *&#x2F;</span><br><span class="line">RC522_GPIO_SCK_CLK_FUN ( RC522_GPIO_SCK_CLK, ENABLE );</span><br><span class="line">GPIO_InitStructure.GPIO_Pin &#x3D; RC522_GPIO_SCK_PIN;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed &#x3D; GPIO_Speed_50MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode &#x3D; RC522_GPIO_SCK_Mode;</span><br><span class="line">GPIO_Init(RC522_GPIO_SCK_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">  &#x2F;*!&lt; Configure SPI_RC522_SPI pins: MOSI *&#x2F;</span><br><span class="line">RC522_GPIO_MOSI_CLK_FUN ( RC522_GPIO_MOSI_CLK, ENABLE );</span><br><span class="line">GPIO_InitStructure.GPIO_Pin &#x3D; RC522_GPIO_MOSI_PIN;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed &#x3D; GPIO_Speed_50MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode &#x3D; RC522_GPIO_MOSI_Mode;</span><br><span class="line">GPIO_Init(RC522_GPIO_MOSI_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">  &#x2F;*!&lt; Configure SPI_RC522_SPI pins: MISO *&#x2F;</span><br><span class="line">RC522_GPIO_MISO_CLK_FUN ( RC522_GPIO_MISO_CLK, ENABLE );</span><br><span class="line">GPIO_InitStructure.GPIO_Pin &#x3D; RC522_GPIO_MISO_PIN;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode &#x3D; RC522_GPIO_MISO_Mode;</span><br><span class="line">GPIO_Init(RC522_GPIO_MISO_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">  &#x2F;*!&lt; Configure SPI_RC522_SPI pins: RST *&#x2F;</span><br><span class="line">RC522_GPIO_RST_CLK_FUN ( RC522_GPIO_RST_CLK, ENABLE );</span><br><span class="line">GPIO_InitStructure.GPIO_Pin &#x3D; RC522_GPIO_RST_PIN;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed &#x3D; GPIO_Speed_50MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode &#x3D; RC522_GPIO_RST_Mode;</span><br><span class="line">GPIO_Init(RC522_GPIO_RST_PORT, &amp;GPIO_InitStructure);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接下来就是主函数"><a href="#接下来就是主函数" class="headerlink" title="接下来就是主函数"></a>接下来就是主函数</h4><p>​        在main.c里面包含两个函数，一个是寻卡函数，一个是main函数。首先定义的是卡A的密匙，基本上都是6个0xff。在寻卡函数里面，讲预先设定好的IC卡序列号存储在数组中，再将读取到的序列号和数组进行比对，这样就能正确识别到已经保存的卡片信息。</p><h6 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">uint8_t</span> KeyValue[]=&#123;<span class="number">0xFF</span> ,<span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>&#125;;   <span class="comment">// 卡A密钥</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IC_test</span> <span class="params">( <span class="keyword">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//uint32_t writeValue = 100;</span></span><br><span class="line"><span class="comment">//uint32_t readValue;</span></span><br><span class="line"><span class="comment">//char cStr [ 30 ];</span></span><br><span class="line"><span class="keyword">uint8_t</span> ucArray_ID [ <span class="number">4</span> ];    <span class="comment">/*先后存放IC卡的类型和UID(IC卡序列号)*/</span>                                                                                         </span><br><span class="line"><span class="keyword">uint8_t</span> ucStatusReturn;      <span class="comment">/*返回状态*/</span> </span><br><span class="line">u8 ID1[]=&#123;<span class="number">0xA9</span>,<span class="number">0x37</span>,<span class="number">0x71</span>,<span class="number">0xe4</span>&#125;;</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;    </span><br><span class="line"><span class="comment">/*寻卡*/</span></span><br><span class="line"><span class="keyword">if</span> ( ( ucStatusReturn = PcdRequest ( PICC_REQIDL, ucArray_ID ) ) != MI_OK )  <span class="comment">//ucArray_ID是卡片类型</span></span><br><span class="line">       <span class="comment">/*若失败再次寻卡*/</span></span><br><span class="line">ucStatusReturn = PcdRequest ( PICC_REQIDL, ucArray_ID );                                                </span><br><span class="line"><span class="keyword">if</span> ( ucStatusReturn == MI_OK  )</span><br><span class="line">&#123;</span><br><span class="line">      <span class="comment">/*防冲撞（当有多张卡进入读写器操作范围时，防冲突机制会从其中选择一张进行操作）*/</span></span><br><span class="line"><span class="keyword">if</span> ( PcdAnticoll ( ucArray_ID ) == MI_OK )                                                                   </span><br><span class="line">&#123;</span><br><span class="line">PcdSelect(ucArray_ID);<span class="comment">//选定卡片</span></span><br><span class="line">PcdAuthState( PICC_AUTHENT1A, <span class="number">0x11</span>, KeyValue, ucArray_ID );<span class="comment">//校验密码 (密码验证模式,块地址,密码,卡片序列号)</span></span><br><span class="line">GPIO_ResetBits(LED1_GPIO_PORT,LED1_GPIO_PIN);</span><br><span class="line"><span class="keyword">if</span>(ID1[<span class="number">0</span>]==ucArray_ID[<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM4,<span class="number">75</span>);</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">TIM_SetCompare1(TIM4,<span class="number">50</span>);</span><br><span class="line">GPIO_SetBits(LED1_GPIO_PORT, LED1_GPIO_PIN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM4,<span class="number">50</span>);</span><br><span class="line">GPIO_SetBits(LED1_GPIO_PORT, LED1_GPIO_PIN);</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">GPIO_ResetBits(LED1_GPIO_PORT,LED1_GPIO_PIN);</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">GPIO_SetBits(LED1_GPIO_PORT, LED1_GPIO_PIN);</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">GPIO_ResetBits(LED1_GPIO_PORT,LED1_GPIO_PIN);</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">GPIO_SetBits(LED1_GPIO_PORT, LED1_GPIO_PIN);</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">GPIO_ResetBits(LED1_GPIO_PORT,LED1_GPIO_PIN);</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">GPIO_SetBits(LED1_GPIO_PORT, LED1_GPIO_PIN);</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">GPIO_ResetBits(LED1_GPIO_PORT,LED1_GPIO_PIN);</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">PcdHalt();<span class="comment">//令卡片进入休眠状态</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SysTick_Init (); </span><br><span class="line">RC522_Init (); </span><br><span class="line"></span><br><span class="line">TIM4_PWM_Init(<span class="number">999</span>,<span class="number">1439</span>);</span><br><span class="line">TIM_SetCompare1(TIM4,<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">LED_GPIO_Config(); </span><br><span class="line">GPIO_SetBits(LED1_GPIO_PORT,LED1_GPIO_PIN);<span class="comment">//先关灯</span></span><br><span class="line"></span><br><span class="line">PcdReset();</span><br><span class="line">M500PcdConfigISOType ( <span class="string">&#x27;A&#x27;</span> );</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">IC_test();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;原件：stm32f103c8t6，RC522，MG90S舵机&quot;&gt;&lt;a href=&quot;#原件：stm32f103c8t6，RC522，MG90S舵机&quot; class=&quot;headerlink&quot; title=&quot;原件：stm32f103c8t6，RC522，MG90S舵机&quot;&gt;</summary>
      
    
    
    
    <category term="项目" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="stm32,门禁" scheme="http://example.com/tags/stm32-%E9%97%A8%E7%A6%81/"/>
    
  </entry>
  
  <entry>
    <title>stm32通用定时器产生PWM</title>
    <link href="http://example.com/2021/08/09/stm32%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8%E4%BA%A7%E7%94%9FPWM/"/>
    <id>http://example.com/2021/08/09/stm32%E9%80%9A%E7%94%A8%E5%AE%9A%E6%97%B6%E5%99%A8%E4%BA%A7%E7%94%9FPWM/</id>
    <published>2021-08-09T08:00:27.000Z</published>
    <updated>2021-08-09T08:36:59.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="stm32定时器生成PWM"><a href="#stm32定时器生成PWM" class="headerlink" title="stm32定时器生成PWM"></a>stm32定时器生成PWM</h1><h4 id="基于f103C8T6，TIM4通道1产生PWM"><a href="#基于f103C8T6，TIM4通道1产生PWM" class="headerlink" title="基于f103C8T6，TIM4通道1产生PWM"></a>基于f103C8T6，TIM4通道1产生PWM</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TIM4_PWM_Init</span><span class="params">(u16 arr,u16 psc)</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="comment">//**结构体声明**//</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;            <span class="comment">//声明GPIO</span></span><br><span class="line">TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure; <span class="comment">//声明定时器</span></span><br><span class="line">TIM_OCInitTypeDef  TIM_OCInitStructure;         <span class="comment">//声明PWM通道</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//**时钟使能**//</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);<span class="comment">//使能定时器TIM4时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); <span class="comment">//使能PB端口时钟</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO//</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;<span class="comment">//PWM--&gt;PB6端口配置</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; <span class="comment">//IO口速度为50MHz</span></span><br><span class="line">GPIO_Init(MOTO_GPIO_PORT, &amp;GPIO_InitStructure);<span class="comment">//根据设定参数初始化GPIOB.6</span></span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_6);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化TIM4</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler =psc; <span class="comment">//设置用来作为TIMx时钟频率除数的预分频值 </span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>; <span class="comment">//设置时钟分割:TDTS = Tck_tim</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  <span class="comment">//TIM向上计数模式</span></span><br><span class="line">TIM_TimeBaseInit(TIM4, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化TIM4 Channel1 PWM模式 </span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; <span class="comment">//选择定时器模式:TIM脉冲宽度调制模式2</span></span><br><span class="line"> TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; <span class="comment">//比较输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">//输出极性:TIM输出比较极性高</span></span><br><span class="line">TIM_OC1Init(TIM4, &amp;TIM_OCInitStructure);  <span class="comment">//根据T指定的参数初始化外设TIM4 OC1</span></span><br><span class="line"></span><br><span class="line">TIM_OC1PreloadConfig(TIM4, TIM_OCPreload_Enable);  <span class="comment">//让oc1能重装载</span></span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM4, ENABLE);  <span class="comment">//使能TIM4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为C8T6的主频为72MHz，所以一般采用arr =999，分频系数psc = 71。即产生周期是1ms的pwm波。</p><h4 id="当我们在主函数设置PWM占空比时，使用的是这个函数"><a href="#当我们在主函数设置PWM占空比时，使用的是这个函数" class="headerlink" title="当我们在主函数设置PWM占空比时，使用的是这个函数"></a>当我们在主函数设置PWM占空比时，使用的是这个函数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TIM_SetCompare1(TIM4,data);</span><br></pre></td></tr></table></figure><h3 id="注：此时设置的data应当大于0小于1000；"><a href="#注：此时设置的data应当大于0小于1000；" class="headerlink" title="注：此时设置的data应当大于0小于1000；"></a>注：此时设置的data应当大于0小于1000；</h3><p>data/1000 = 占空比</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;stm32定时器生成PWM&quot;&gt;&lt;a href=&quot;#stm32定时器生成PWM&quot; class=&quot;headerlink&quot; title=&quot;stm32定时器生成PWM&quot;&gt;&lt;/a&gt;stm32定时器生成PWM&lt;/h1&gt;&lt;h4 id=&quot;基于f103C8T6，TIM4通道1产生P</summary>
      
    
    
    
    <category term="STM32" scheme="http://example.com/categories/STM32/"/>
    
    
    <category term="PWM" scheme="http://example.com/tags/PWM/"/>
    
  </entry>
  
  <entry>
    <title>新的一年</title>
    <link href="http://example.com/2021/02/15/%E6%96%B0%E7%9A%84%E4%B8%80%E5%B9%B4/"/>
    <id>http://example.com/2021/02/15/%E6%96%B0%E7%9A%84%E4%B8%80%E5%B9%B4/</id>
    <published>2021-02-15T13:15:27.000Z</published>
    <updated>2021-08-09T02:00:07.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新年新起点"><a href="#新年新起点" class="headerlink" title="新年新起点"></a>新年新起点</h1><p>新的一年已经到来，在这个新年里，要设立目标，制定计划，并且脚踏实地的完成我的计划。</p><p>新的一年，新的起点，好好学习，勿忘初心。</p><p>记录自己的学习计划和学习情况，适当的调整，坚持下来</p><p><strong>最后，意志的力量，就是决定成败的力量！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;新年新起点&quot;&gt;&lt;a href=&quot;#新年新起点&quot; class=&quot;headerlink&quot; title=&quot;新年新起点&quot;&gt;&lt;/a&gt;新年新起点&lt;/h1&gt;&lt;p&gt;新的一年已经到来，在这个新年里，要设立目标，制定计划，并且脚踏实地的完成我的计划。&lt;/p&gt;
&lt;p&gt;新的一年，新的起点</summary>
      
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="http://example.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
